<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0425.1340                               -->
<workbook original-version='18.1' source-build='2024.1.2 (20241.24.0425.1340)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <BasicButtonObject />
    <CollapsiblePane />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Letalidad mundial (Covid Muertes Global)' inline='true' name='federated.1pkz74o1vq48yk12a2ekb1g2mncj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Covid Muertes Global' name='excel-direct.11q1p881rml6nv1a6gwe81fqzmuf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Files/Projects DA/Covid/Covid Muertes Global.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.11q1p881rml6nv1a6gwe81fqzmuf' name='Letalidad mundial' table='[&apos;Letalidad mundial$&apos;]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_global_cases' ordinal='0' />
            <column datatype='integer' name='total_global_deaths' ordinal='1' />
            <column datatype='real' name='global_death_percentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.11q1p881rml6nv1a6gwe81fqzmuf' name='Letalidad mundial' table='[&apos;Letalidad mundial$&apos;]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_global_cases' ordinal='0' />
            <column datatype='integer' name='total_global_deaths' ordinal='1' />
            <column datatype='real' name='global_death_percentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Letalidad mundial]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_global_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_global_cases]</local-name>
            <parent-name>[Letalidad mundial]</parent-name>
            <remote-alias>total_global_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Letalidad mundial_D1926D8776AA4D88997B36509853A6CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_global_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_global_deaths]</local-name>
            <parent-name>[Letalidad mundial]</parent-name>
            <remote-alias>total_global_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Letalidad mundial_D1926D8776AA4D88997B36509853A6CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>global_death_percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[global_death_percentage]</local-name>
            <parent-name>[Letalidad mundial]</parent-name>
            <remote-alias>global_death_percentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Letalidad mundial_D1926D8776AA4D88997B36509853A6CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Letalidad mundial' datatype='table' name='[__tableau_internal_object_id__].[Letalidad mundial_D1926D8776AA4D88997B36509853A6CE]' role='measure' type='quantitative' />
      <column caption='Global Death Percentage' datatype='real' name='[global_death_percentage]' role='measure' type='quantitative' />
      <column caption='Total Global Cases' datatype='integer' name='[total_global_cases]' role='measure' type='quantitative' />
      <column caption='Total Global Deaths' datatype='integer' name='[total_global_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/aleto/AppData/Local/Temp/TableauTemp/#TableauTemp_14p5upg18s7pl911s8c8z1eiqyd5.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/09/2024 04:08:44 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_global_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_global_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_global_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>Letalidad mundial</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Letalidad mundial_D1926D8776AA4D88997B36509853A6CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_global_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_global_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_global_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Letalidad mundial</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Letalidad mundial_D1926D8776AA4D88997B36509853A6CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>global_death_percentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[global_death_percentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>global_death_percentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Letalidad mundial</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Letalidad mundial_D1926D8776AA4D88997B36509853A6CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Colombia&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Letalidad mundial' id='Letalidad mundial_D1926D8776AA4D88997B36509853A6CE'>
            <properties context=''>
              <relation connection='excel-direct.11q1p881rml6nv1a6gwe81fqzmuf' name='Letalidad mundial' table='[&apos;Letalidad mundial$&apos;]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_global_cases' ordinal='0' />
                  <column datatype='integer' name='total_global_deaths' ordinal='1' />
                  <column datatype='real' name='global_death_percentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Muertes continentes (Covid Muertes Continentes)' inline='true' name='federated.1cm14uc0577xny16pd3hy1gqcwi3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Covid Muertes Continentes' name='excel-direct.05ywvj100cyppe1br97y00im7yv4'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Files/Projects DA/Covid/Covid Muertes Continentes.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.05ywvj100cyppe1br97y00im7yv4' name='Muertes continentes' table='[&apos;Muertes continentes$&apos;]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='integer' name='max_total_deaths' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.05ywvj100cyppe1br97y00im7yv4' name='Muertes continentes' table='[&apos;Muertes continentes$&apos;]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='integer' name='max_total_deaths' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Muertes continentes]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[Muertes continentes]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Muertes continentes_DDF29287153145BDA21AAE7273AEA186]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[max_total_deaths]</local-name>
            <parent-name>[Muertes continentes]</parent-name>
            <remote-alias>max_total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Muertes continentes_DDF29287153145BDA21AAE7273AEA186]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Muertes continentes' datatype='table' name='[__tableau_internal_object_id__].[Muertes continentes_DDF29287153145BDA21AAE7273AEA186]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Max Total Deaths' datatype='integer' name='[max_total_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/aleto/AppData/Local/Temp/TableauTemp/#TableauTemp_1d08sty1g7kg5u1gbxwy71iel5nx.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/09/2024 04:08:55 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[continent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>continent</remote-alias>
              <ordinal>0</ordinal>
              <family>Muertes continentes</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>max_total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[max_total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>max_total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Muertes continentes</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Colombia&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Muertes continentes' id='Muertes continentes_DDF29287153145BDA21AAE7273AEA186'>
            <properties context=''>
              <relation connection='excel-direct.05ywvj100cyppe1br97y00im7yv4' name='Muertes continentes' table='[&apos;Muertes continentes$&apos;]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='continent' ordinal='0' />
                  <column datatype='integer' name='max_total_deaths' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Muertes paises (Covid Muertes Paises)' inline='true' name='federated.1ki3a231ghzhoz1gh0u371vcd7yj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Covid Muertes Paises' name='excel-direct.0s424ua0wbp3j21djmcpd09i4dji'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Files/Projects DA/Covid/Covid Muertes Paises.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0s424ua0wbp3j21djmcpd09i4dji' name='Muertes paises' table='[&apos;Muertes paises$&apos;]' type='table'>
          <columns gridOrigin='A1:B227:no:A1:B227:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='total_death_count' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0s424ua0wbp3j21djmcpd09i4dji' name='Muertes paises' table='[&apos;Muertes paises$&apos;]' type='table'>
          <columns gridOrigin='A1:B227:no:A1:B227:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='total_death_count' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Muertes paises]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B227:no:A1:B227:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Muertes paises]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Muertes paises_BD451CEC4161446AB62570B121D57192]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_death_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_death_count]</local-name>
            <parent-name>[Muertes paises]</parent-name>
            <remote-alias>total_death_count</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Muertes paises_BD451CEC4161446AB62570B121D57192]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Muertes paises' datatype='table' name='[__tableau_internal_object_id__].[Muertes paises_BD451CEC4161446AB62570B121D57192]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Total Death Count' datatype='integer' name='[total_death_count]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/aleto/AppData/Local/Temp/TableauTemp/#TableauTemp_12ua5t31qg259i12rmin918469r8.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/09/2024 05:27:18 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Muertes paises</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>226</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Muertes paises_BD451CEC4161446AB62570B121D57192]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_death_count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_death_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_death_count</remote-alias>
              <ordinal>1</ordinal>
              <family>Muertes paises</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>216</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Muertes paises_BD451CEC4161446AB62570B121D57192]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Colombia&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Muertes paises' id='Muertes paises_BD451CEC4161446AB62570B121D57192'>
            <properties context=''>
              <relation connection='excel-direct.0s424ua0wbp3j21djmcpd09i4dji' name='Muertes paises' table='[&apos;Muertes paises$&apos;]' type='table'>
                <columns gridOrigin='A1:B227:no:A1:B227:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='total_death_count' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Covid muertes paises fechas (Covid Muertes Paises Fechas)' inline='true' name='federated.0fn5zeb0qio9mr18pvey003dcen9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Covid Muertes Paises Fechas' name='excel-direct.17odu3w1l2rdwt1g0gqpo1157pdn'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Files/Projects DA/Covid/Covid Muertes Paises Fechas.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.17odu3w1l2rdwt1g0gqpo1157pdn' name='Covid muertes paises fechas' table='[&apos;Covid muertes paises fechas$&apos;]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='integer' name='total_cases' ordinal='2' />
            <column datatype='integer' name='total_deaths' ordinal='3' />
            <column datatype='real' name='death_percentage' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.17odu3w1l2rdwt1g0gqpo1157pdn' name='Covid muertes paises fechas' table='[&apos;Covid muertes paises fechas$&apos;]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='integer' name='total_cases' ordinal='2' />
            <column datatype='integer' name='total_deaths' ordinal='3' />
            <column datatype='real' name='death_percentage' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Covid muertes paises fechas]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Covid muertes paises fechas]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid muertes paises fechas_074E091AAA124F89811735A4338DF09F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Covid muertes paises fechas]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid muertes paises fechas_074E091AAA124F89811735A4338DF09F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Covid muertes paises fechas]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid muertes paises fechas_074E091AAA124F89811735A4338DF09F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Covid muertes paises fechas]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid muertes paises fechas_074E091AAA124F89811735A4338DF09F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>death_percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[death_percentage]</local-name>
            <parent-name>[Covid muertes paises fechas]</parent-name>
            <remote-alias>death_percentage</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid muertes paises fechas_074E091AAA124F89811735A4338DF09F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Covid muertes paises fechas' datatype='table' name='[__tableau_internal_object_id__].[Covid muertes paises fechas_074E091AAA124F89811735A4338DF09F]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Death Percentage' datatype='real' name='[death_percentage]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/aleto/AppData/Local/Temp/TableauTemp/#TableauTemp_1pjlr4i0amgx5k1c4yq380v9rwx4.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/09/2024 05:47:31 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Covid muertes paises fechas</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>254</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid muertes paises fechas_074E091AAA124F89811735A4338DF09F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>1</ordinal>
              <family>Covid muertes paises fechas</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>8255</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid muertes paises fechas_074E091AAA124F89811735A4338DF09F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>2</ordinal>
              <family>Covid muertes paises fechas</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>48994</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid muertes paises fechas_074E091AAA124F89811735A4338DF09F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>3</ordinal>
              <family>Covid muertes paises fechas</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17773</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid muertes paises fechas_074E091AAA124F89811735A4338DF09F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>death_percentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[death_percentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>death_percentage</remote-alias>
              <ordinal>4</ordinal>
              <family>Covid muertes paises fechas</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>42743</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid muertes paises fechas_074E091AAA124F89811735A4338DF09F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='100' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Colombia&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Covid muertes paises fechas' id='Covid muertes paises fechas_074E091AAA124F89811735A4338DF09F'>
            <properties context=''>
              <relation connection='excel-direct.17odu3w1l2rdwt1g0gqpo1157pdn' name='Covid muertes paises fechas' table='[&apos;Covid muertes paises fechas$&apos;]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='date' name='date' ordinal='1' />
                  <column datatype='integer' name='total_cases' ordinal='2' />
                  <column datatype='integer' name='total_deaths' ordinal='3' />
                  <column datatype='real' name='death_percentage' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 2 (generated)' name='[Action2_5C2590699817423CBF66F167A13F3609]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Sheet 4' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Location' />
        <param name='target' value='Sheet 4' />
      </command>
    </action>
    <action caption='Highlight 1 (generated)' name='[Action2_CA28E9D958DF4E62BF4B85082B8799EC]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Location' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Letalidad COVID-19</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Letalidad mundial (Covid Muertes Global)' name='federated.1pkz74o1vq48yk12a2ekb1g2mncj' />
          </datasources>
          <datasource-dependencies datasource='federated.1pkz74o1vq48yk12a2ekb1g2mncj'>
            <column caption='Global Death Percentage' datatype='real' name='[global_death_percentage]' role='measure' type='quantitative' />
            <column-instance column='[global_death_percentage]' derivation='Sum' name='[sum:global_death_percentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_global_cases]' derivation='Sum' name='[sum:total_global_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_global_deaths]' derivation='Sum' name='[sum:total_global_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Global Cases' datatype='integer' name='[total_global_cases]' role='measure' type='quantitative' />
            <column caption='Total Global Deaths' datatype='integer' name='[total_global_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pkz74o1vq48yk12a2ekb1g2mncj].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pkz74o1vq48yk12a2ekb1g2mncj].[sum:total_global_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pkz74o1vq48yk12a2ekb1g2mncj].[sum:total_global_deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pkz74o1vq48yk12a2ekb1g2mncj].[sum:global_death_percentage:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1pkz74o1vq48yk12a2ekb1g2mncj].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1pkz74o1vq48yk12a2ekb1g2mncj].[sum:total_global_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pkz74o1vq48yk12a2ekb1g2mncj].[sum:total_global_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pkz74o1vq48yk12a2ekb1g2mncj].[sum:global_death_percentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1pkz74o1vq48yk12a2ekb1g2mncj].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1pkz74o1vq48yk12a2ekb1g2mncj].[:Measure Names]' value='127' />
            <format attr='text-format' field='[federated.1pkz74o1vq48yk12a2ekb1g2mncj].[sum:global_death_percentage:qk]' value='n#,##0.0000;-#,##0.0000' />
            <format attr='text-align' value='left' />
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1pkz74o1vq48yk12a2ekb1g2mncj].[:Measure Names]' value='56' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
            <format attr='background-color' scope='cols' value='#d4d4d4' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
            <format attr='background-color' value='#f9e9e0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='1' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#000000' />
            <format attr='stroke-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#000000' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1pkz74o1vq48yk12a2ekb1g2mncj].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.3293370008468628' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1pkz74o1vq48yk12a2ekb1g2mncj].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{B80EB41E-1028-47F9-902F-BC527CC94EBA}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Muertes por continentes</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Muertes continentes (Covid Muertes Continentes)' name='federated.1cm14uc0577xny16pd3hy1gqcwi3' />
          </datasources>
          <datasource-dependencies datasource='federated.1cm14uc0577xny16pd3hy1gqcwi3'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Max Total Deaths' datatype='integer' name='[max_total_deaths]' role='measure' type='quantitative' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[max_total_deaths]' derivation='Sum' name='[sum:max_total_deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1cm14uc0577xny16pd3hy1gqcwi3].[none:continent:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1cm14uc0577xny16pd3hy1gqcwi3].[sum:max_total_deaths:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1cm14uc0577xny16pd3hy1gqcwi3].[sum:max_total_deaths:qk]' field-type='quantitative' max='2200000' min='0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1cm14uc0577xny16pd3hy1gqcwi3].[sum:max_total_deaths:qk]' scope='rows' value='Muertes totales' />
            <format attr='auto-subtitle' class='0' field='[federated.1cm14uc0577xny16pd3hy1gqcwi3].[sum:max_total_deaths:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1cm14uc0577xny16pd3hy1gqcwi3].[none:continent:nk]' value='103' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1cm14uc0577xny16pd3hy1gqcwi3].[sum:max_total_deaths:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1cm14uc0577xny16pd3hy1gqcwi3].[sum:max_total_deaths:qk]' value='Muertes totales'>
              <formatted-text>
                <run>Muertes totales</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1cm14uc0577xny16pd3hy1gqcwi3].[sum:max_total_deaths:qk]' />
              <color column='[federated.1cm14uc0577xny16pd3hy1gqcwi3].[sum:max_total_deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='618' />
                <format attr='maxwidth' value='618' />
                <format attr='minheight' value='549' />
                <format attr='maxheight' value='549' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1cm14uc0577xny16pd3hy1gqcwi3].[sum:max_total_deaths:qk]</rows>
        <cols>[federated.1cm14uc0577xny16pd3hy1gqcwi3].[none:continent:nk]</cols>
      </table>
      <simple-id uuid='{E1F34379-B66F-42AC-BA0F-C445FC8C8735}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Muertes totales por país</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Muertes paises (Covid Muertes Paises)' name='federated.1ki3a231ghzhoz1gh0u371vcd7yj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ki3a231ghzhoz1gh0u371vcd7yj'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_death_count]' derivation='Sum' name='[sum:total_death_count:qk]' pivot='key' type='quantitative' />
            <column caption='Total Death Count' datatype='integer' name='[total_death_count]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ki3a231ghzhoz1gh0u371vcd7yj].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1ki3a231ghzhoz1gh0u371vcd7yj].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1ki3a231ghzhoz1gh0u371vcd7yj].[none:location:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:location:nk]' />
              <groupfilter function='member' level='[none:location:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ki3a231ghzhoz1gh0u371vcd7yj].[Latitude (generated)]</column>
            <column>[federated.1ki3a231ghzhoz1gh0u371vcd7yj].[Longitude (generated)]</column>
            <column>[federated.1ki3a231ghzhoz1gh0u371vcd7yj].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ki3a231ghzhoz1gh0u371vcd7yj].[Longitude (generated)]' field-type='quantitative' max='16929696.067674033' min='-18216917.955730598' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ki3a231ghzhoz1gh0u371vcd7yj].[Latitude (generated)]' field-type='quantitative' max='5896882.1773022115' min='-5603888.9785200497' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ki3a231ghzhoz1gh0u371vcd7yj].[sum:total_death_count:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1ki3a231ghzhoz1gh0u371vcd7yj].[none:location:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1ki3a231ghzhoz1gh0u371vcd7yj].[none:location:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1ki3a231ghzhoz1gh0u371vcd7yj].[none:location:nk]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1ki3a231ghzhoz1gh0u371vcd7yj].[sum:total_death_count:qk]' value='Cantidad de muertes'>
              <formatted-text>
                <run>Cantidad de muertes</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1ki3a231ghzhoz1gh0u371vcd7yj].[none:location:nk]' />
              <color column='[federated.1ki3a231ghzhoz1gh0u371vcd7yj].[sum:total_death_count:qk]' />
              <geometry column='[federated.1ki3a231ghzhoz1gh0u371vcd7yj].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ki3a231ghzhoz1gh0u371vcd7yj].[Latitude (generated)]</rows>
        <cols>[federated.1ki3a231ghzhoz1gh0u371vcd7yj].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{86A955C3-3A4A-4C79-A150-D6B8E05FA714}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Linea de tiempo de muertes por país</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid muertes paises fechas (Covid Muertes Paises Fechas)' name='federated.0fn5zeb0qio9mr18pvey003dcen9' />
          </datasources>
          <datasource-dependencies datasource='federated.0fn5zeb0qio9mr18pvey003dcen9'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[total_deaths]' derivation='Max' name='[max:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Quarter-Trunc' name='[tqr:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fn5zeb0qio9mr18pvey003dcen9].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0fn5zeb0qio9mr18pvey003dcen9].[none:location:nk]' direction='DESC' using='[federated.0fn5zeb0qio9mr18pvey003dcen9].[max:total_deaths:qk]' />
          <slices>
            <column>[federated.0fn5zeb0qio9mr18pvey003dcen9].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0fn5zeb0qio9mr18pvey003dcen9].[max:total_deaths:qk]' field-type='quantitative' max='1258490' min='-80576' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0fn5zeb0qio9mr18pvey003dcen9].[max:total_deaths:qk]' scope='rows' value='Muertes totales' />
            <format attr='title' class='0' field='[federated.0fn5zeb0qio9mr18pvey003dcen9].[tqr:date:qk]' scope='cols' value='Trimestre año' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fn5zeb0qio9mr18pvey003dcen9].[none:location:nk]' />
              <text column='[federated.0fn5zeb0qio9mr18pvey003dcen9].[max:total_deaths:qk]' />
              <lod column='[federated.0fn5zeb0qio9mr18pvey003dcen9].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='left' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-range-min' value='false' />
                <format attr='mark-labels-range-scope' value='table' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-line-first' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0fn5zeb0qio9mr18pvey003dcen9].[max:total_deaths:qk]</rows>
        <cols>[federated.0fn5zeb0qio9mr18pvey003dcen9].[tqr:date:qk]</cols>
      </table>
      <simple-id uuid='{9603176A-A88A-4478-B7A9-0B567329CC4A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Covid muertes paises fechas (Covid Muertes Paises Fechas)' name='federated.0fn5zeb0qio9mr18pvey003dcen9' />
      </datasources>
      <datasource-dependencies datasource='federated.0fn5zeb0qio9mr18pvey003dcen9'>
        <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
        <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='6' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98004' id='24' param='horz' type-v2='layout-flow' w='99048' x='476' y='998'>
            <zone h='98004' id='17' param='vert' type-v2='layout-flow' w='99048' x='476' y='998'>
              <zone h='98004' id='10' param='horz' type-v2='layout-flow' w='99048' x='476' y='998'>
                <zone h='98004' id='8' type-v2='layout-basic' w='99048' x='476' y='998'>
                  <zone h='16098' id='5' name='Sheet 1' w='33572' x='476' y='998'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='81906' id='7' name='Sheet 2' w='33572' x='476' y='17096'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='52867' id='12' name='Sheet 3' w='65476' x='34048' y='998'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='45137' id='14' name='Sheet 4' w='50893' x='40655' y='53865'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='45137' id='15' name='Sheet 4' pane-specification-id='0' param='[federated.0fn5zeb0qio9mr18pvey003dcen9].[none:location:nk]' type-v2='color' w='6607' x='34048' y='53865'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='45137' id='25' name='Sheet 4' param='[federated.0fn5zeb0qio9mr18pvey003dcen9].[none:location:nk]' type-v2='filter' values='database' w='7976' x='91548' y='53865'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='2804' id='18' type-v2='dashboard-object' w='1404' x='88063' y='51986'>
          <button action=''>
            <toggle-action>tabdoc:toggle-button-click-action window-id=&quot;{D4D33C7A-AB61-4CF1-974C-33000FF789CE}&quot; zone-id=&quot;18&quot; zone-ids=[15]</toggle-action>
            <button-visual-state />
            <button-visual-state />
          </button>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='22' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98546' id='21' param='vert' type-v2='layout-flow' w='95734' x='2133' y='727'>
                <zone fixed-size='148' h='14182' id='5' is-fixed='true' name='Sheet 1' w='95734' x='2133' y='727'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='26182' id='12' is-fixed='true' name='Sheet 3' w='95734' x='2133' y='14909'>
                  <layout-cache minheight='244' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='360' h='29091' id='7' is-fixed='true' name='Sheet 2' w='95734' x='2133' y='41091'>
                  <layout-cache has-max-size-h='true' maxheight='633' minheight='633' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='26182' id='14' is-fixed='true' name='Sheet 4' w='95734' x='2133' y='70182'>
                  <layout-cache minheight='198' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2909' id='15' name='Sheet 4' pane-specification-id='0' param='[federated.0fn5zeb0qio9mr18pvey003dcen9].[none:location:nk]' type-v2='color' w='95734' x='2133' y='96364'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{CE5A8661-6098-489A-8D81-72822E32AFAD}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{587319D7-71FD-4B18-B9D1-3764B19A8E16}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1cm14uc0577xny16pd3hy1gqcwi3].[sum:max_total_deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1cm14uc0577xny16pd3hy1gqcwi3].[:Measure Names]</field>
            <field>[federated.1cm14uc0577xny16pd3hy1gqcwi3].[none:continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CF0FFF89-8539-4F4A-B431-E109E6CF9C5E}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1ki3a231ghzhoz1gh0u371vcd7yj].[none:location:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1ki3a231ghzhoz1gh0u371vcd7yj].[sum:total_death_count:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ki3a231ghzhoz1gh0u371vcd7yj].[none:location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{7D8AF3F7-AE27-404E-9386-374694DB8A64}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0fn5zeb0qio9mr18pvey003dcen9].[none:location:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0fn5zeb0qio9mr18pvey003dcen9].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fn5zeb0qio9mr18pvey003dcen9].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A9E5A57D-F384-4019-8EA2-5421B7562A9E}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight field='[federated.0fn5zeb0qio9mr18pvey003dcen9].[none:location:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview visible='true' />
      <simple-id uuid='{D4D33C7A-AB61-4CF1-974C-33000FF789CE}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      xf8PdTtfiTZ2VeAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='81' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29aZgcV5nv+Ys9t8qlKmvRUtoXS5Y3yWBjjNkMmMVtGBrsto0v0N0sbWgG
      Llyme/r29J2ZT/MMM8O9zXKBBtsNZutrNwYvGBsDNsa7Fmup0lJ7qbbMrNwzIyPinPmQpbJk
      laQqKUuqUsXvUT4Risg4cSry/Z84y3veo0gpJT4+SxT1QmfAx+dCMi8C8DxvPpL18Wk4/hvA
      Z0njC8BnSeMLwGdJ4wvAZ0njC8BnSaPP9ouOXaZY9dBElYKtEDYErhaEah4jksDUNDzPJRIJ
      z2d+fXwayqwF4AoolfI0x2JUMmPUVA0piygKyPIgqZFJ1m27jJAQCCHwx9d8FgOzF0Ctyujo
      BPnUGMHmZTiFDJ5mQa2IHgzTkmyhXCrTEg2hqiqq6teufBY+ymxdIVynRs310FQFIRUMXQVU
      pPRQVb3+JpASTdPwPA9N0+Y56z4+586sBTAXfAH4LBb8eorPksYXgM+SxheAz5LGF4DPksYX
      gM+SxheAz5LGF4DPksYXgM+SZtauEMJzqbkCXZEIRUe6VTzFANdGswJoiooQHqZpzmd+fXwa
      yqwFUC6VSGXzJAIKeSLY2TE8RUfxqiiGgVt2iHUsZ1nSQEqJEGI+8+3j0xBmLYBQOIKSzRGO
      NJHLe6iaAUgU1QQEdrWKqqhIKac/Pj4LnVkLoJjL4LiCdK6E50BbMo6nBZF2ASMco7NTxfNc
      VFWddorz8Vno+M5wPksavxfIZ0njC8BnSeMLwGdJ4wvAZ0njC8BnSeMLwGdJ4wvAZ0njC8Bn
      SeMLwGdJM2tXiEI2zXi2BHaBkqcToIajBaGaw4jEsNBQgmFWLW+bz/z6+DSUOblCDB8dxnHc
      ejAsdIT0UBUFIWuMDo6z6codxMMmQggURZnPfPv4nBPScXCGh2cvgGxqjKHxSTqSMWrSxMLG
      1UJIO4cRSRDQDRy3RjwW832BfBYc0nXxMhmqB7qwDxzAHR1Fb23zneF8Lj6klCAl7sQEdlc3
      9oEDOMPDaPEE1iWbsTZvxujsRLVMXwA+FxfSdcn+5GfYB/ajJRJYW7cS2LoFY9UqlBkCNvsC
      8LlokFIyee996MkkTTe9B0U/cx/PrHuBfHwWOoVHHgUhaHrfe2cs7WfCHwfwWfRIKSm/9DL2
      gQMk7rxj1sYPvgB8LgKcvj7yD/2S5s98GmWOUUl8AfgsatyJCTLf+z4td38WLRKZ8/W+AHwW
      LaJUIv3t75C4606M9vazSsMXgM+iRDoOme99n8g73o61efNZp+MLwGfRIaUk++OfYqxeRei6
      N51TWnPuBu093IWjBNFFGUcNodg59EiMkB7AUxRWLPOd4XzmDyklxcd/g6iUid95+zn7nM1Z
      AKZpMjo6wcqODnQpUIw4UtY43NXLtmvfjOd5/jrBPvNGdecuKjt3kfif/xZPCDjHEJxzHgme
      GBmk7BkYsoKrHnOGixMyAziuQ2uyxR8J9pkX7CM9ZO/7V5Jf/hJaU1ND0vRdIXwWBW46Terr
      /42WT/81xooVDUvXbwT7LHhEpUL6G98ifttHG2r84AvAZ4EjhSDz379D5O1vI7B1a8PT9wXg
      s2CRUpL94f0YnZ2Ern/zvNzDF4DPgkRKSfGJJxHlEtEPfXDeptj6AvBZkFR37qLy4kskPvHx
      OXl3zhVfAD4LjlpfH/mHHqLl7s+iWta83ssXgM+Cws1kyPzL90n85V+ixWLzfj9fAD4LBlGu
      kP7mt4jfditm58rzck9fAD4LAuk4ZL77XcLXX481D92dp2LOvkDD/T2UPI2Q6tYjw9l5jHCc
      kGnhCkFba8t85NPnIkaUSmT+5QeY69cTfusN5zWo2pwFUKlUqHgqwaYmNOGiWGFErcj+A11c
      9qbrfWc4nznhZbPkvvsvBK55I6Eb3oLneef1/nP2Beo70k3R0YgYHq4WmooNGidkBKgJwYpl
      bb4vkM+scMcnSP3zN4h9+EMEr7jiguTBd4bzuSDUevtIf+c7tHz6U5hr1lywfPhxgXzOK1JK
      qnteJffzn9P6xS+it7Ve0Pz4bwCf84aUktLTz1D+4x9p+dzdDfPpPxf8N4DPeUF6HvlfPYzT
      20vyC3+LGgpd6CwB/hvA5zwghSD7wx8hXZfEx+5EMYwLnaVp/DeAz7wiajUy3/o2xqpVRG/5
      s3l1bDsbfAH4zBtePk/6m98i9MY3En772xbkqkG+AHzmBXd8nPS3v0PTe99D6A1vuNDZOSW+
      AHwaTq23j8n77iN260cJXHLJhc7OaTllhaxvYPh85sPnIqG6bz+ZH9xD4pOfWPDGDzO8AYql
      MgeP9PGTBx/jk3d8iEs2rD3h/PBAL7mqIBkxT3CGC5oWruuQSMTPW+Z9Fg5SSiovvEDhsV+T
      /OIX0BOJC52lWXGSAFzX44c//xXvvOFa1q062Sd7+cqVeMNjVB2JqBVRFQ23kOZw/yhbrn6j
      7wy3FJGS8pNPUtm1m8SXvgjBIK7rXuhczYqTxgFGxiaQUqLrGm3Jk12bs6lRtHAzo/2HcI8t
      lN0Uw1IMpG6yakW7Pw6whJCuS+6BB/FSKRJ/9Zeoc1yg4kLjD4T5nBVSStyxMSbvuRdr40ai
      H7wFZRH+5jP2AhXGR+geHCDeupYNq/xozz4nIj2P4uO/ofz8C8TvuB1r44YLnaWzZkYBqIrH
      wNAIwabGhqHzWfzU+vrI/uh+rC1baP27r8571Ib5xHbcmQVQLRbI5QuUStXznSefBYqwbQq/
      ehi7u5v4HbdfUB/+0yGEJFeqki1WyRVtsqUquWKVXMkmV7QplG1sx6Nac9BU9WQBSOlS8DRW
      L1/G6tUdF+Jv8FlASClx+vqYvOc+gju20/qVLy8oZzaol+RHhifZeWiUfX3jBE2dRFOQWCRA
      PGwRjwRY1R4n0RSgKWRiGTqWoWHo2kxvAAVVkZQKBQqlMu3Nc195z+fiQNg2hV/+Crv7IIm/
      +svzFqrkTEgpyZVsXu0Z56WuYSayZZYnm7hm6wo+cN1GYuHArNM6SQCKomF5NSbLRTKTRej0
      G8FLEfvgQbI//inBN1xN61e/gqJfWK8ZKSV9o1le7h5hz5ExPCHYvmk5H7huE+uXN6OqZ+do
      N0M3qGTgwH6KmoKqxrhkw9wbwn436OJFVCrkfvZz3PFxEnfdhd5+4QrAYqXG/r4JXuw6Ss/R
      STrboly5sYPtG5fRFDIb4l06cyO4WuLAwChvffu7zvkGPosDKSX23n1kf/JTIu96J/E77zjv
      /fquJxjNFNl5cIQ9PeNUbIdNnS286+p1rG6PYZmNfwvNOBCW6tnLvtEcgVAH11y5fs6J+m+A
      xYVXLJL/Hw/gplIkPnYnetv8lvpSShxXkCtV6RvJMjSRp280y9F0kdZ4iKs2dHDZ+nba4uGz
      rtrMlhkkJdGDcYKBMi2JkyctV4o50gWbJoupRfLyGJE4lqbheS7hcHheM+zTOOoRGvaQe+BB
      Im9/e8NLfSklUkK15jKcKtAzMsnAaJahiQK24xILW6xqj7OmI8bVlywnGQsRtM5vD9OM75TD
      XfuZlCar1gRPOnfo0EFalq8hkyshZRFFAVkaJD2aZe3WbQSF8J3hFgHeyAjFhx/Bs20Sn7sb
      LZHAkxLOwYlNSkjlK/SP5egbyTI4nmc0U0BVFFZ3xFjVFuWaLcv5yNtiRIIz+wydbye6GatA
      TrVMKpPBamqhuelEERw5eIBsxaHJ0vFUC2pF9GAQxQEzmqBzWRIhBOoCm/vpA15mksrLL1N+
      /nnUYIjIje8gcI4R2frHcjzy3CFG0kVqjktzU5B1KxKsbo+zqi1Gazw079WYc2FGAaR7u3li
      zz42rb2Sqy5fd8I5z3VwPImuglQ0EC6KpqMqClJKNE3z2wALCFEqU923l9Ifn0UUi4SuvZbQ
      G65GjcXOqRelULZ58OkujgxP8uG3bmHtsjjhgLmgjX0mZm5WK2BpM7+iNN1AO+Eq39AXElII
      3JERyn96Dru7G6Ozk+D27STuugstET/nqAy5YpX7n9xLuepwy/Wbuf3Gy9C1xfu2n1EATa3L
      WNtZYbk/CLYokFIi8nnKL75I5fkXQdcIv+UtNL3/fajBk9txZ4PnCZ7a1cdjzx/mg2+5hOsu
      7Vx0pf1MzDgQ9vRDD5A2Q2zZfBWb187dH8ivAp0fhF2jumc3pT8+i5eZJHTtNYSvexNavLHT
      UntHJvnBo7tY0xHntndsIxRYWL5A58KMvkCXXnU5L/VMkEz4fkALkVpfH8Wnfkft8GGsSy8l
      /tGPoHd0NDzoVKFs89On9nF0osAn3nslazriCzK2z7kwYxXIDASpFiYZn8jREvdFsJCoDQyS
      +f49xG/7KIk7bkeZhymIrid4Zs8Ajzx3iPddu5FP3HQl2iKu55+OGQWgKBrlQg7NvHhedRcD
      0nXJ/vBHJD5+F9a6dWe+YK7pS0nfaI77n3iV1niIf7jrBqLhxTvhZTbMKAAtEGTd6s6LVvWL
      ESklhcd/g7lp47wYf8V2+Pnv9nNoKMNd77mcDSuaL7rqzkyc2rtIhXKxch6z4nM63NFRKi++
      SNvf/11D0xVS8qe9gzz4dBfvesN67njXZWiLeBBTeA6FzCEcO4cQDsK1EcLFcytT/68hPBvP
      rSKFM9OMsDL3fucejJYW3nbjlgvxN/i8Dum6TN5zH4m7PtbQ2VhDE3nueXQXLdEg//muG4hF
      Zj+RZCFRq06SHn6B8YE/UMkPEYqtwgq1omoGqmahqjqaHkTTLHQjXN/XA6iqMdMbwOSN11/D
      RCZbd+54HdVyiaorCBoaQtXBraGaATRFQUqBscCmy10MFJ94EnPNasy1a8/85VlyaCjNDx7d
      xR03XsbWNa2LqrojhEslP8TE0LNMDD6DFC7Ny3awZtvtNDVvRD3FIO5MzCAAj0rFpSkWJ2id
      nNDgQB/Rlg5Soyk8RQe3imoaeBWXaNsylrXGp7wAfWe4RuCOjlJ+/gWS/+nLDXumtuPxg0d2
      8dlbrmZlWxRgwf9enlsln9rHxOCzZI6+iBlK0tb5FrZe93cEm5ajKK9V2+byt8w5MNbIUD9H
      UzkS0QhSShQkEo98usCy9ZtoS0TwPM93hmsEQpD6f/5fojffjLl5U8OS/dlT+whYBn92XePS
      nA/cWpGJwWeYGPwjlfwA0eQm2la/nVjb5ehGY7rn5zzFJhwOsSoUJ6C6eFoQaRcwwnFWrlTx
      PAdVVaed4nzOjeLvfoe5ciXBrY1rix0ezrC/P80//ocbFuRvVM4PMtb/O1JDzyJcm+blb2Dd
      5XcSTV5yQinfKOYsgGjidctaNh2/2Jlf/28U7sQEpaefofV/+WrD0qxNVX0+dfN2DP3CG78Q
      HtXiCNnxV5kc20kh1YUZStK68s1se8v/RiDcNi9Gfzx+bNAFiJyq+jS9/30EtjSu9P/pb/eh
      ayoffuuF6d0TXo1SfpDs2G4mR1+hlBvADCRItF9BouMqmlo2oemh89og91eIWWBIKSn9/g/o
      bW1YDVxgom80y96ecf7zx29oWJqnQ0qJcKsUsz1kRl8hO7YbuzRBINJOomM7a7bdSTi2Gs1o
      jLfq2eILYIHhpVIUn3iStn/4+4aVhI7r8d1fvsKnbt6OOU9VHyklnlMmO7GXydFXyI3vxXMr
      hGKrSbRfwaarP0cwuhJVXVgmt7Bys8SRnsfkD+8nftutDfPjB/jlswe5amMHqzsa6yYtpSCf
      OsBo75PkJl5FeA7RlktIdFxF5yUfJhBe+PNJfAEsIEpPP4MWj2Ftu7RhafZPRVP7L598W0PS
      k1JSKR5lrO+3jBx5jEh8HcvW38S6Kz6ObkbmvdHaaHwBLBDcVIrSU0+R/MqXG1r1ueex3Xzi
      vVee87RFt1ZiYvBpRnufwLHzLF//Xq6+6RsY1rnNLb7Q+AJYAEgpmfzhj4h++MNokcbNv3jk
      uUNsXNnMhpXNZ3W9EC6FdDdD3b+gkDlI87IdbNzxN4TjaxZdSX8qfAFcYKSUlP/4LFpTE4HL
      tjUs3aOpAi92HeUf7ppbr4+UEruSYuTwI4z2PkE4uoplG97Pluu+gqpefOM8vgAuMCKbpfDI
      I7T9r43r9RFS8t1fvsxd77mCwCzjabpOmdTgswwfegi3VmL5xvdPVXGiDcnTQmXOAihlJ9jf
      N0bMlDhaCOwsRiSGhY4aCNG5fOG3/BcKUggy99xL7LZbURsUUlJKyaPPHWLdimY2nqHqI6Ug
      O/4qI0ceIzexl+Zlb+CSa75EKLbqoqninIk5C+DQ4SOUq4LWlSsxpIcaaEGKGkcHh9h05Q5/
      neA5UH72T6ihEMbWrQ0LCTiSLvK7Xf38l4/fgOd5p/yeXZ5g7x/+kUC4lWXr38+GHZ+fdiP2
      PAGIhuRnoTNnAVx59bXk83lqlQKu1lRfJzjWTmtbJ45TQ9Pq/de+K8TpcScnKT/xJK1f+Y9o
      DVp8wvUE9z3+Kh+/6QpCwVPP5ZVS0LPrO6y59C9oX/uOhtx7sXJWTz4ajUL0WN0wcdyZCzus
      vViQQpD90Y+J3vJnaE0nR+A+qzSl5MmXe+hojnDp2tNXQ3MT+6hVM7SteVtD7r2YWRoVvQVG
      5cUXUUyT0I7tDUtzbLLEUzv7+IsbT9+TJITL4Ve+zcYdf7Nk6vmnw38C5xkvlyP/8CPE/+LW
      xqUpBN9/ZCd3vvtyQmeIrz/a8xtCTZ00NS/syTDnC18A5xEpJdkf/ojoBz7QsKoPwJMv99Ke
      CHPpmtbTfs+tlRjY/zPWX/VXi3r0tpH4AjiPVF5+BVAIXr2jYWmOZ0s88VIPt71z2xmNum/f
      /XSsuxErlGzY/Rc7vgDOE+7EBPkHHyT+sTsaFsOzPuD1Cne++3LCgdNHQqgUR5gYeJrOLX/e
      kHtfLPgjwecBZ2iI9De+RfOnP4UWbdzI6u939tEaC3HZutP3+kgpOfjiP7Nh+6fRtIs71OFc
      8d8A80ytr5/0N79N86f/GnPN6oalO5Et8egLh7nz3ZefseqTHduF51ZIrryuYfe/WPAFMI/U
      +vvJfPd7NH/m05hr1jQsXU8I7n1sN7e/87IzxuoXXo3Dr3ybTVd/zm/4zoBfBZoHpJQ4ff1k
      fnAPLZ+/G6Nj7ouMnI5n9gwQCZpcufHM6Y4ceYym5k1EEo0PqHsxMGcBjA33kyrUCGkejhaE
      ag49EiNsBHBRWLHMd4ar9fQwed+/kvz859BbG9vj8vLBER5+7hD/8LEzuzk7dp7BrgfY/u7/
      r6F5uJg4i8BYYUazFfRQBE0KlKYEUtgcOtDDtmuvX/LOcHZXF4Uf/4TE5z8PiXhD17199PnD
      vHxwlL+/482ELO2MaR/ZfQ8d69+LqkfO+/q7i4U5CyCfzxMMBFFxcPUgsprDaEqw7aod1Ep5
      tFALsDSd4aqv7qX4b/9G8gt/i97WuDdhzfX44a/3ULYd/v7Ot2AaZ362pdwAufE9bLzpGw1z
      trsY8QNjNYjq3n3kHniAls98Br3t9COyc6FQtvnmv7/E2mVxPvzWLbOK3S+lZPdTf0fn5v+J
      lhVvbFheLkb8ouEckVJSfXUv+V/8guTffr6hKzQeTRX4xoMvctM1G3jL5atmfV1m5EWQgubl
      VzcsLxcrvgDOkequXeR/+SuSX/piQye0dw+k+O6vXuFTN+9gU2fLrK8TnsOhl77JZW/9331v
      z1ngC+AcKP/pOQqPP07yP36pYcYvpeTpqRUav3r7m2mNz22q5PDBh2hedjWhaGdD8nOx4wvg
      LCk98wyl3/+hoSW/6wke+MMBekey/ON/eOucF6SuVSYZ6n6Qq9/7LX/Qa5b4AjgLSs/8kdKz
      fyL5hS+gRhozmb1iO3zv4Z00hUy+9NFr5xy+XEpJz5576Nzy5xhW41ytL3b8SuIckFJS/MPT
      lJ9/nuTnP9cw458sVPi/fvwsG1c0c9d7rjir2P2lbC/51AGWb/xAQ/K0VPDfALNESknxyd9S
      3b2Hls9/DrVBK7QPjef52s/+xF3vuYKrZuHaMHPeBIde/iYbtn9qwUVfXuj4T2sWSCkpPPIo
      dlcXyc9/DqVBxv/KwRHuf+JVvnzrm1iePPtqS2rwj6iaRaKjcRNtlgq+AM6AlJLCrx6m1ttL
      y913N8T4hZQ89vxhXuquhy6Mn8P6vMKrcWTX97n87f+n3/A9C+buDHd0gGxFENY9HDWEYufQ
      I3FCRgBXeLS1zr7PeiEjpcRLpcn+5CeooRDNn/pr1MC5TyZxXI8f/uZVipUaX7ntOoJnmMR+
      pjwOdj1AcsU1hJpWnHPeliJzFkAsHseWJaTnoQkHxQoj7CL793dx2ZsuDmc4aduUnniS6ksv
      EfnzDxPYuhWhKIhzdCir2A7//GDdreGOG69CVZRzclKrVScZPvgQ22/6tu/s9jokEinrb1sh
      BbbrUnVdqk6NiuNQdV3KTm3uvkDd+/eghRLoXhlXDSHtHEYkRsgI4AjBimXti9YXSEpJdfdu
      cv/jAULXXEPTe96NYpx7RORy1eGFA8M88vwhbrn+Eq67dOU5V1eklHQ9938Ta72U5Rved855
      XGx4QlCs2RTtKgXbplCtUrCr5O0qRbuKkBIFBUUBVVGxdB1L1wkaJiHDIGAYhE3Ld4Y7hjM6
      Ru6nP0PRdWJ/cSt689nF1J9Oz/XY2zvOky/3Mp4tce3WldxwxWqSsdCZL54Fhcwhup772kU3
      6CWlxHZdSrUaZccmP2XYRdsmV61guw6ekEgkEdMiYgWIWBZNVoBYIDi9r6kqxz+VUz2jJd8I
      FrZN4eFHqO7bR+xDH8K6dOtZG5TnCfpGszy1s4/uwTRbVye55frNrF2WOOcVWo5HCo9DL32D
      Dds/syiMX0qJK+rVEHuq6lGcMuqSY1Oya1ScGo7wcDwPXVUJmRYR0yIaqBv2ilicJitA0DDR
      VBVNURryty9ZAUghqO7ZQ+6Bfyd07TW0ffU/nVUPj5SSVK7Mb1/pZc+RMdoSYd68bRV3vvvy
      Wcfmnyvjg09jWDESHVfOS/pnQkqJJwWeqNevHc+jVLMp2DZF26bs1CjZNhWnVjd6z0VTVExd
      x9Q0QqZJkxWgyQqQDEcImSYh08TQNExNRz2Pol5yVSApJe7YGLmf/BQMg/htt6K3zK3nSkpJ
      xXZ55tUBnts/hKooXLetkx2blhE7yy5NKSVIgZQewqtRLaewy+PY5TTV0ih2OY1dnqBWncR1
      Slx149cIRk49cHb8z/r6H/iEc1LiCG+6ZK65LhXHmWo0OlSn9m3PxXbr+54QqIpaL4lVBUPV
      CJsWYcsibJhErHrVJGgY9bq3pqM2KBZSo1lSAhBVm8LDD1N9dS+xWz9KYMvcFqL2hODl7hGe
      3jNAOl9mx6blvPmyTjqaZ+cM59ZK2JUU1dI4tUqGamkMuzyBXU5RLY8jvBoKKqpuYgaaCYTb
      sEKt01sz2EzWMzmQylJ2HDxRj+HvnrCV0/8HpurBCnUZnFiyHitoDVXD1PUpgzWmDTegG/WP
      YWDqOgFNx9DrpfTFwpIQgJSSyssvk3/oV4SunerdmWX+pJQcHs7wh90DdA+m2NyZ5IYrVrNh
      RWJWdVDXKZMefo6h7n/HrRWxwm0EQm2YwWYC4XYC4VasYBIr3FYPWqUowIn1WyEFh1MTvDzU
      T0A3uGpFJ9FAEH2qVK1vlemG37Hjr9n7yfmcTQNxMeF4DvlqjlRpgkw5TdEuUK6VqLpVKrUy
      ZadMuVbGdivUPJuKV6Hili9uAUgpcUfHyN5/P1o0SvRDH0JPzr66MzZZ4p5Hd6GqCu/cvpZt
      69pmtdK6lILiZA/DB39BdnwP8bYrWLn5FsLxtXOapGK7LvtGj3JgbIRkOMLVnatpDoUvCoM9
      I1KAcMGrgXDx3Cplu0jOzpOu5hit5JioZBgvjJKrZMjbk2iqRNVVTNNA0zQ0XUPVdEzdwtQt
      LN3EMAKYqkkAlRAX8RtAOg75h35Jde9e4rfdirlp06wNx3E9Hn3+MM/tG+LWd1zK5evbZ3Vt
      rZplrO8pRo48gmFGWb7pZpIrrkHTZ79wiJSSom2z6+gg/ZNp1jW3csWKlYTNBRbSUEqQHjgV
      cErgOXWDlR4I77h9d2pfvHZ8+piHFC5SeHjCwfMcKrUi6Wqe0WqOVK3CWK1ExrOZFC7StBC6
      hmEaWJZF2ArWG9SBOIlAkiYrTtxsIWrGCOlhTNXCVC00VUdTdDRFQ3+ds+BFKQBRqZD5zncx
      16yh6f3vQ5llVAQpJQcH09z7691csb6dW66/5Iw9OVJ4TI7tZvjgLyjl+mhf8w461r6LYNPy
      OeVZSsl4scCu4UEmSgWuXNHJ5tYOjAvwHKWs97PX/03tu1VkaQJZGkeUxnGKYzjVSVzA1ixq
      UmILj4pnY3suNelhey5V4VITLhXXxpESW7g4UlL1HBzpYUsJqoai6tQUSVVj2sADVgDLNIkG
      ojQHk0SMJuJWCzEzQdxMEDaaCOsR9HNYvvWiE4BXLJL+xrcIXfNGIm9766yvK1Zq/PjJvYym
      i3zyfVeyovX0QWwrxVFGe37NSM/jNCU2sHzjB2hetmPO83CFlPRmUuwcHkAKyRtWrWVVormh
      XYFSSqpOhXQ5Tbo0QaacYaI4Rr6aw3arOJ6DI5z61qshPWe6CqJIAZoFCFDqhqqqOpqmY2kW
      umZg6RamZmLpFkEjVK9uaPVjASOIpVsE9ACmbqFrOlWvTFkUyTtZCm6evJPFFQ4hPUzcbCFh
      NRM1E0SNODEzjjmPAX3nLIBcahRhxXCKKVw1BHZ+yhnOxPEcEvH4BROAm5kk9fWvE735ZoI7
      ts+q2uIJwbN7h/jFM13cfN0m3nL5alR15us8t0p6+AWGDz6EY+dYtuEmOta+G92MzLle7nge
      3eOjvDI8QGu4ias7V5MMzz0dgJpbo2DnyVYmSZUmSJcmSJVSpEspSnYBR7gYmkEimCAZaaMl
      lCQZTBBzKwTsHEZ1Et0uYEoHw4qjRtoglIRIB0qwBYwQKArKsT6l2VQHPZtcbdwzXy4AABHF
      SURBVJJJO03aHidVnaDkFpBSEDGitATaaLFaabaSxMxmdFVHvQCT+OcsALeSZawEbqmAlB6K
      oiBljZH+US7Z8UaiQR0hxHlvqLkjo2S/9z2aPvoRrM2bZ3XNcKrAT367n0hA5/Ybt9EUmqmk
      kZSyvYwceZjM0ZeItV/F8g3vJ5JYf1ZRF8pOjf3jo3SPj7E20cxly1bQZM1u7KBcKzGQ7acn
      c4iR/FEK1TzlWgkJRMwIUStGc6iFZKSNZDhJMtxGyAxjaiaaqkGtiJbvQ0kfRFZzeKE2CLVC
      uG7wQjNB1ZHUnRnF1FKpQorpapGUAln/xvS+LapM1tJk7TQZO0XVKwMKYa2JZitJs5UkYSWJ
      GFEM1ZgW0kJgzgIYGzhI36Sg2XJxtRCymsOMxLAUHWlYrFpx/p3har29TN57H4m77sJct/aM
      36/WXB7+00FeOTjK7e+6jK2rkycJVkpJtTTGwRf/K65dYOUlH6JlxbXoxtx8eYSUVJwaI/kc
      h1PjpEolLl+2gk2t7QRO42gnpaTilOmf7OPA6F4Opw5Sc2usbl7D5rattDd1EA3ECJmh6SqC
      kB7e1Mf2qlS9CmW3RLUyQSXTRbl4lCoudqiFWjCGKz08KaYNXlHq3ajKVDesgjq9VafeAPXv
      1M+rU+dN1TrB0EN6BFNrzKSh+WZRtwGklNhdXWR/9GNa7v4sxrJlZ/z+gf4U9z62mzddupL3
      XrsByzi5kes5FXr23Et66E9s2PEZWlZcM6vSXkqJkJKCXWUwO8lQbpJUsYCh6ayIxVkZT7Aq
      3jxjdLe6E5hNX+YI+0f3cmiim5pXY3ViDVs6trEhuYloIErGTjFSHqLg5Ki4ZWxhU3FL2F4V
      VVFRpEAvpbAcm4BmEYquJRhbS0APEtTC9d4RzcJUTQzVRFP0ujEv0RhCi1oA5RdeoPD4b0h+
      7u4zRmQrlG3ufWw3parDx959+YxTEKUUjBx+lL6997Ny8y2s2PxBtDOUZK7wmCgWGc5NMpid
      JFetELUCUwbfTHukCf0Uz8J2q/Skj3BgdC8HJ7qouTarm9extWMbm1ovIRqIkbFTDJX6GCr2
      ka1lSFhJVoZXEzGihPQwlmYRkCpWdhA1cxgqGYi0Q+tWiK0G7dzduS9mFqUApJSUfvd7Ki+9
      dMZlh4SQPLWzj0efP8SH3rKF67ad7IsvpSQ7vodDL/4zTS2bWX/lJzGDJ7tDSykpOzXGCnmG
      c1lG8jkqjkMyHGZVopkVsQTxYPCUpWm5VqZ/spcDY/s4OH6AqlNhdfNaLu24jEvaLyVsRsg7
      WYZL/QxOGXzEaGJVZB2d4TXErRamm6KVDKS7IXOk3t8eXwMtm+vGv0RL87Nh0QlACkHhsV9j
      HzhAy91/gxqYuQEppWRwPM8PHt1JayLMR9++dSrQlERIprYS7Ax9O7/NeHaUdds/SzixHiHr
      vUMSOTXxosZIPku6VEJISUdTlJXxBMujMUKmdcouSykl6VKKV0d2sX/0VSaKE6xuXsuW9kvZ
      1HYJsUCMsltiqNTPYKmXdHWCkB5mZXg1nZG1NJsJdLcGdh7KKShNQCUNThmMMCTWQctGsKK+
      0Z8li0oA0vPI/fzfEIUCiU98fMYBLtcTdA2keGpnH0dG0qzdFKS1JThVz1WmG3DCs7H7H2KF
      14/SeTOlyNZ6Y0+tf09XNRRAU1UChsHyaJy2SNNpG64ArnAZzR/lpcHn6R4/AFJy6bIr2L7y
      DbQ3tVP1KhwtDzFU6mO8MoKpGiy3OlhlJGkRKqZdqBu7na+7AehBCMTqvTWhFggkwIyAvsBG
      hhcpi0YA0nGYvO9fUYNBYh/9yAnGL6UkW6ry+939PPvqIKvaYtx49To2rWw5qU9fSsHEwB84
      svN7dKx7F51bPjLnnp0T05N4wqV7ootXBl+gN91DItTM5cuv5IoV2wmZYUbKg/QVDzNS6MUo
      p1lOkJVKhHZMTMcGzawbdajlNUO3ovVSfin4/VwAjpn9ohCAsG0y3/kexsoVRD94y3Qd3hOC
      /YPjPP7CEQbHCrzzqrXccMXqU/rkF9IH6X7h6wQiHWzY/hkC4bOP41+yi7w6spsXB54jVZpg
      bWI1VyY3cUmik7ys0O9m6C/34+aHaPdUVmtRVqgxrFArBJvrhh5M+NWXOVAvbMAVEkcIXE9S
      8ySOkDiexPEEztQxISWeqH9fSIkr6lXf4/dhEQhAlMukvv7fCF17DeEp14Z0scQf9vTzx1cH
      6YhHuXH7Wi7f0H7KxSPscprDr3yLSnGMjTs+SzS5ZW4DdVIgnQoTlQw7R/awa/BFvNwAW3SD
      K6LtxENNHJVl+g1JPhQlEVnNqqb1rDLbCJsxFC1QN/IFUJrXu2qnfNl4zRCgbhyv7R9/zWsl
      pnzduWPXHEvTqyeMJ4+PysD0voSpOb2vbY99R0imjdjx6oZ6QhpINEVB1xQM9bit4mEoDgY2
      umJjKDVU6aIpHhoOCt7UvkDFQcVDpe6Mt6AF4KYzpL/xTZpueg/69qvYNzjG4y8d4ehYiTdt
      6eSdO9aSjIVOMmbXc6k4ZRynTK7313R3PUjLhg/QsuoGBCCEQEgPV3h4wkVIgSfqA0jT+04J
      URjFLU+QLY6z3y4Rja/i8uZ1bGhqwVFsBtwUE14Jy4yysmk9qyPrSFjJkzwOz8Qxo/TkiSWW
      40lqrsAREtsVuGKqxPPk1HREpks6yTFDZWqU9piRH2f0U/dTmdIjCsfXEE/cf+0/ivLa/IH6
      wNhrx1WlXq2sz9EFberLmiJRkKhKPS1FARWJokhURXntOBJ1+phEV1x0ahhKFU1UwCuhiBKI
      MopXBq+MFFUQDlLYIBxQNFBNFC2AogamChwDFB1FNernFR1F0UE9tjUAZeEKwBkbI/Wt/07t
      xnfykhrlmT1DxANB3nX1ei5fn0SqLtlyhnRxnGxpnEJxhHJxlEphGLs0jlrLE8ejZeWb6TGb
      8RQdTdXqHylQ3CpaJYNenUT1HFTNQLOiqJF29FAS1YqhqhqaqhI0QjRHm8k4EwwW+/GEoD20
      gtWRDSQDHWhYuKJutN7UdvrjSTx5zGih5okTzrmifl5VFDRFQVXrRqSrCoamYGoKhqZi6ceO
      qZiagqYqqIgp45EoCBSmttIFaaNKB4QNsoYibBRZA1FDiuO20p36COTUFupTM4/tI0XddVl6
      9S5XqG+lh0SgMNPbTeGkiTiKevIxlOOuVVBUA0W1QAuhaCEUPVLfaiEUPYSihVEUayotrX5v
      KZGujayVwCkjayWkXQA7j7SLSLtQ/9SK9fNOFZwS0j2LuECvJz12FCOSwNQ0PM8hHA6fswBq
      g4Mc+dp/5YEVl7Lf1QmFBtixXqUlWKZSPIpbSeOWU1iyhqGpaKaFNAO4ZhDHCuFaIZRAFD3c
      imGdOEYghQe1IoqdP+6oUm+EGsf57XtOvQgFFLsIFRVTdGKxDEuNTFcDVAVUtf4q1tS6kb72
      YfqYMWW0pqZOn9O1+jkVB0R1yk/eRnpV5JTxTu971SnDtZHCmS4FkS5SOODZ0wZaL+ECKKoO
      6FMloVk3LNVEUU1Qrfr3hABFB0VFUYzXqmqKTn1mmgaoU8e1+vd4bb+h7Rfh1Y20VkY6FagV
      68Y8NedAOtX6eWQ9X4oGav2jaBZYERQjCGYYxWxCCURRzAiK1QTH9o0g6EEUM4RiBM9VAJLe
      3l6kdMiM5Vi9ZSst0RCO47xWZ5zaqqpad6g67v9iau6qMhXiQgiBEIKX/o+v8YTu0Z7sY0t8
      kCZdRTGCqGYQxQhNbYMoZgBd0TClxJISHTAlGFJiCA8dCbqsV2fsIqKaR9jFqZJtNijI46sz
      igpyqrRS9OkqhUSbqoYpCDnlR6Por9Wpp9wNhABUA1UPgmLWX9Oqiabp09H0jrkleMKbfk7A
      9LNSVa3uhDYV+EnVVIRU6kZw3HOsP1cVNB05lWdV05DH30fTEVMR8l9/7Um/l6bVz0kJilL/
      /Txv6rHU05CzuPakPB5/raqjBSJIIwx6AMWMoAWaEJoFRgjVDKFYTcipt8jpbGomG4PX7FHT
      NDzvnNsAkq59r6IFAlCTBOItrOxowfO8k6IA1L1G5az+P5mdJKIW6n3xioKi6tN2B7L+Fj1h
      EsQxQ5tyW1CO+5MU/dTeh9Ml3ak4XaN1pnOv63KdPqqc+P85PIuTs3x+rl0qeTznKlDNrqDo
      JioKUgp0Xb/gM8J8fGbLgm0E+/icD/wRGJ8ljS8AnyWNLwCfJY0vAJ8ljS8AnyWNLwCfJY0v
      AJ8lzbzEuVYUBW9qmByYHnp/PY04fvyo4Hykv9iP+8/n9MfnZSDs9TeFuf0ApxpIm+sPPFM6
      852fhZbOqf7eYz40My1csRj+rkalM+8C8PFZyGj/9E//9E8X6ua9h7so1wRjQ/2gavT39qCo
      Or29vUQTzeTSo/QOjhKyNMYzeaJN4RnTGe4/QqZok5s4iu3CyPAArlAZ7j+MEUrglDMc7hkk
      YOoc6TlCMNqCqZ9c8vUd7qJ0Qn56UVSN3t5emuLNFNKj9AyOEtAkR/oHiSda0GaIIzo80EMm
      XyWXHqHqSEaHB6gJlaMDh9FCCdzyJId6BmiKJRjq7aGpuXnGxtjEyCDDE1lqxUmypRrZiRGK
      VY9sagSrqRlRzdPVfRgzEGLo6AjNiZNjIwnP5cihblwU+o4cQTdNenv70DSNiUyOWDTC2HA/
      w+OTaMKmZ3CU1paZF//oP9JN0fYYPzqInHo+KBpj4ykS8RiTEyP0DIwSMOBI7yCxRPOMz+fo
      QC+pXIVCeqT++48MUhMKY6OjJBIJyvk0h3r6icQSDPf1Ek4k6hNtXkdqdIjBsQxuOUumYJNL
      j5CvOGRGj1JxIaB5dB08jBEIMjw88/O5oI3gZLINr1Qg2rGMUqFCazJBJp1m7cp2JrJFCpUa
      m9uDTHoRFHHqhaCbk611v3ozhF0p05psxqlkiLevJ5sZI5MrsWXdcibLLi3xCNKb+aXX0tqG
      Vy4Sbe+gVCjTmkwwmUmzZmUHqWyBfKXG5o4Qk66FU63giZnTaW5pRdcUVD1ArVKmNdmCV80Q
      bdtALj1KOldky/oVDA70kckU8WZMBeLNSSxdx5Ua0rFJJpOoqkoiGqTmwchEhq3btpLNpAia
      M0erUFSNZLKF8sQ4yzZtoFiwScQimMEwmlK/c8WVdDRpeFac4GkWCmxJtiGqFSLJNkqFMm2t
      CXTDxDLrZpQr22xeHmGypuPaZdxTeJ03J5MYuoqiB3CqFdqSLaiqRihkIYFUtsCWDasY7u8j
      nclzip+LWKIFy9BxhAquTTLZiqbpJNuSqKrC0fE0Wy/dSi6TJmjN/HddQAEIuru7UQMBxvv7
      kaLC4f4xIuEgB3sGaQoF0KXLzu4hLC/L4OAwVWcmU5Ec6u7GFZJiLo3rOXQf7kczw4wNdGMF
      owQNlT37DuKWMgyOF1CUmZ6o4GBXN6plMT44gBRVDvWNEA6FONQzQCQUQMdjZ9cQhiiBouB5
      M/3CksMHu3E9SSmfmcpPH6oZYXygCzMYJWho7NnXjapqOLUSxWJlxifUc/ggtuNiV4tU3Prz
      EsJjaPAoE6kU8XCQfXt246EzPDRIKls4+a9yKhw60ocVa6J/fxc1u8DR8SyVYo7BwUFKVRfp
      VDnYP056uIeKXTtpUb3p59PdjWIapIYHQVbp7hnBqVUYHhxkslDGQLCrawBdVEBV8dxT/F4H
      u3E8QamQwfFcug71IYTD0YFBJjI5QqbOq3u7QNNwaxUKp3g+vUcOYddcatUiFUfQ3d2F59l0
      dx9GSEkiUn8+LjpHhwdJTZ78fBZ8G8BzXRRNO+d4+UJ4SKmgneN6vQstP8h6dAR9Fks3nQ7X
      ddE0bcaqz1xo1PORwsOTyrmvr3yG57PgBeDjM5/4A2E+SxpfAD4XD16N/fv2MXB0fNaXXDwr
      Hvv4qDqlzFGa25exe9c+pC4xXJuS45FoaaOcTdGSbGOiUIHUQSLLN/oC8LmIUFQsywKnQFno
      ONlxFE/BUwXp3b9nYNxl65aNDE3keOf2Tvb0DPiNYJ+Li2qljG4YuB4IzznujCSfzRIMRyhV
      akRCAVBVXwA+S5v/H/qVbI8KYyyVAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
