<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0515.0324                               -->
<workbook original-version='18.1' source-build='2024.1.3 (20241.24.0515.0324)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (covidDeaths)' inline='true' name='federated.0m3jvgj0am01wq1bmfbwh08ig90v' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covidDeaths' name='excel-direct.1ojjzif069f64211446ce05uujb0'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Files/Projects DA/Page/Main/projects/covid/covidDeaths.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1ojjzif069f64211446ce05uujb0' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:K10001:no:A1:K10001:0' header='yes' outcome='2'>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='string' name='location' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='population' ordinal='3' />
            <column datatype='string' name='total_cases' ordinal='4' />
            <column datatype='string' name='total_deaths' ordinal='5' />
            <column datatype='real' name='final_lethality' ordinal='6' />
            <column datatype='integer' name='final_death_per_continent' ordinal='7' />
            <column datatype='string' name='case_percentage' ordinal='8' />
            <column datatype='string' name='final_vaccinated' ordinal='9' />
            <column datatype='string' name='final_vaccinated_percentage' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1ojjzif069f64211446ce05uujb0' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:K10001:no:A1:K10001:0' header='yes' outcome='2'>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='string' name='location' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='population' ordinal='3' />
            <column datatype='string' name='total_cases' ordinal='4' />
            <column datatype='string' name='total_deaths' ordinal='5' />
            <column datatype='real' name='final_lethality' ordinal='6' />
            <column datatype='integer' name='final_death_per_continent' ordinal='7' />
            <column datatype='string' name='case_percentage' ordinal='8' />
            <column datatype='string' name='final_vaccinated' ordinal='9' />
            <column datatype='string' name='final_vaccinated_percentage' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K10001:no:A1:K10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_74CF06CAF015488C8F8335D2C2CCA4E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_74CF06CAF015488C8F8335D2C2CCA4E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_74CF06CAF015488C8F8335D2C2CCA4E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_74CF06CAF015488C8F8335D2C2CCA4E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>130</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_74CF06CAF015488C8F8335D2C2CCA4E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>130</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_74CF06CAF015488C8F8335D2C2CCA4E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>final_lethality</remote-name>
            <remote-type>5</remote-type>
            <local-name>[final_lethality]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>final_lethality</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_74CF06CAF015488C8F8335D2C2CCA4E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>final_death_per_continent</remote-name>
            <remote-type>20</remote-type>
            <local-name>[final_death_per_continent]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>final_death_per_continent</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_74CF06CAF015488C8F8335D2C2CCA4E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>case_percentage</remote-name>
            <remote-type>130</remote-type>
            <local-name>[case_percentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>case_percentage</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_74CF06CAF015488C8F8335D2C2CCA4E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>final_vaccinated</remote-name>
            <remote-type>130</remote-type>
            <local-name>[final_vaccinated]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>final_vaccinated</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_74CF06CAF015488C8F8335D2C2CCA4E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>final_vaccinated_percentage</remote-name>
            <remote-type>130</remote-type>
            <local-name>[final_vaccinated_percentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>final_vaccinated_percentage</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_74CF06CAF015488C8F8335D2C2CCA4E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_74CF06CAF015488C8F8335D2C2CCA4E2]' role='measure' type='quantitative' />
      <column caption='Case Percentage' datatype='real' datatype-customized='true' default-format='n#,##0.000000000&quot;%&quot;;-#,##0.000000000&quot;%&quot;' name='[case_percentage]' role='dimension' type='ordinal' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Final Death Per Continent' datatype='integer' name='[final_death_per_continent]' role='measure' type='quantitative' />
      <column caption='Final Lethality' datatype='real' default-format='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' name='[final_lethality]' role='measure' type='quantitative' />
      <column caption='Final Vaccinated' datatype='integer' datatype-customized='true' name='[final_vaccinated]' role='measure' type='quantitative' />
      <column caption='Final Vaccinated Percentage' datatype='real' datatype-customized='true' default-format='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' name='[final_vaccinated_percentage]' role='dimension' type='ordinal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' datatype-customized='true' name='[total_cases]' role='dimension' type='ordinal' />
      <column caption='Total Deaths' datatype='integer' datatype-customized='true' name='[total_deaths]' role='dimension' type='ordinal' />
      <column-instance column='[__tableau_internal_object_id__].[Sheet1_74CF06CAF015488C8F8335D2C2CCA4E2]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Sheet1_74CF06CAF015488C8F8335D2C2CCA4E2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[final_vaccinated]' derivation='Attribute' name='[attr:final_vaccinated:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Attribute' name='[attr:population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[final_vaccinated]' derivation='Max' name='[max:final_vaccinated:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Max' name='[max:population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[final_death_per_continent]' derivation='Sum' name='[sum:final_death_per_continent:qk]' pivot='key' type='quantitative' />
      <column-instance column='[final_lethality]' derivation='Sum' name='[sum:final_lethality:qk]' pivot='key' type='quantitative' />
      <column-instance column='[final_vaccinated]' derivation='Sum' name='[sum:final_vaccinated:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/aleto/AppData/Local/Temp/TableauTemp/#TableauTemp_00xphpd0k80mru18px3w50klfkqd.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/14/2024 08:27:37 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[continent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>continent</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_74CF06CAF015488C8F8335D2C2CCA4E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>254</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_74CF06CAF015488C8F8335D2C2CCA4E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>8575</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_74CF06CAF015488C8F8335D2C2CCA4E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>254</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_74CF06CAF015488C8F8335D2C2CCA4E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>129</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51782</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_74CF06CAF015488C8F8335D2C2CCA4E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>5</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17174</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_74CF06CAF015488C8F8335D2C2CCA4E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>final_lethality</remote-name>
              <remote-type>5</remote-type>
              <local-name>[final_lethality]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>final_lethality</remote-alias>
              <ordinal>6</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>239</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_74CF06CAF015488C8F8335D2C2CCA4E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>final_death_per_continent</remote-name>
              <remote-type>20</remote-type>
              <local-name>[final_death_per_continent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>final_death_per_continent</remote-alias>
              <ordinal>7</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_74CF06CAF015488C8F8335D2C2CCA4E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>case_percentage</remote-name>
              <remote-type>129</remote-type>
              <local-name>[case_percentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>case_percentage</remote-alias>
              <ordinal>8</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>60795</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_74CF06CAF015488C8F8335D2C2CCA4E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>final_vaccinated</remote-name>
              <remote-type>20</remote-type>
              <local-name>[final_vaccinated]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>final_vaccinated</remote-alias>
              <ordinal>9</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>236</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_74CF06CAF015488C8F8335D2C2CCA4E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>final_vaccinated_percentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[final_vaccinated_percentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>final_vaccinated_percentage</remote-alias>
              <ordinal>10</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>236</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_74CF06CAF015488C8F8335D2C2CCA4E2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[__tableau_internal_object_id__].[cnt:Sheet1_74CF06CAF015488C8F8335D2C2CCA4E2:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[attr:final_vaccinated:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[max:population:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[sum:population:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[max:final_vaccinated:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[sum:final_vaccinated:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[sum:final_lethality:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[attr:population:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[sum:final_death_per_continent:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Colombia&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_74CF06CAF015488C8F8335D2C2CCA4E2'>
            <properties context=''>
              <relation connection='excel-direct.1ojjzif069f64211446ce05uujb0' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:K10001:no:A1:K10001:0' header='yes' outcome='2'>
                  <column datatype='string' name='continent' ordinal='0' />
                  <column datatype='string' name='location' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='population' ordinal='3' />
                  <column datatype='string' name='total_cases' ordinal='4' />
                  <column datatype='string' name='total_deaths' ordinal='5' />
                  <column datatype='real' name='final_lethality' ordinal='6' />
                  <column datatype='integer' name='final_death_per_continent' ordinal='7' />
                  <column datatype='string' name='case_percentage' ordinal='8' />
                  <column datatype='string' name='final_vaccinated' ordinal='9' />
                  <column datatype='string' name='final_vaccinated_percentage' ordinal='10' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_75E58D0708854335983C08F7CBA8178F]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Sheet 5' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Sheet 5' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Tableau Book' fontsize='12'>Muertes por COVID-19 por continentes.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (covidDeaths)' name='federated.0m3jvgj0am01wq1bmfbwh08ig90v' />
          </datasources>
          <datasource-dependencies datasource='federated.0m3jvgj0am01wq1bmfbwh08ig90v'>
            <column-instance column='[final_death_per_continent]' derivation='Attribute' name='[attr:final_death_per_continent:qk]' pivot='key' type='quantitative' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Final Death Per Continent' datatype='integer' name='[final_death_per_continent]' role='measure' type='quantitative' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:continent:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[attr:final_death_per_continent:qk]' scope='rows' value='Muertes por COVID-19 totales' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[attr:final_death_per_continent:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[attr:final_death_per_continent:qk]' />
              <text column='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[attr:final_death_per_continent:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[attr:final_death_per_continent:qk]</rows>
        <cols>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:continent:nk]</cols>
      </table>
      <simple-id uuid='{EE8F40BD-986A-491E-919E-3434EAC5B0B2}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Muertes totales y letalidad del COVID-19 por país</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (covidDeaths)' name='federated.0m3jvgj0am01wq1bmfbwh08ig90v' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0m3jvgj0am01wq1bmfbwh08ig90v'>
            <column-instance column='[final_lethality]' derivation='Attribute' name='[attr:final_lethality:qk]' pivot='key' type='quantitative' />
            <column caption='Final Lethality' datatype='real' default-format='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' name='[final_lethality]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[total_deaths]' derivation='Max' name='[max:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Total Deaths' datatype='integer' datatype-customized='true' name='[total_deaths]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:location:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:location:nk]' />
              <groupfilter function='member' level='[none:location:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:location:nk]</column>
            <column>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[Latitude (generated)]</column>
            <column>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[Longitude (generated)]' field-type='quantitative' max='18077545.101098202' min='-14996834.855365979' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[Latitude (generated)]' field-type='quantitative' max='8201045.4418630553' min='-6577710.0129059646' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[max:total_deaths:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:location:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:location:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:location:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[max:total_deaths:qk]' />
              <lod column='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:location:nk]' />
              <text column='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[attr:final_lethality:qk]' />
              <geometry column='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='auto' />
                <format attr='wrap' value='auto' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-range-min' value='false' />
                <format attr='mark-labels-range-max' value='false' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[Latitude (generated)]</rows>
        <cols>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C6108D81-1164-414C-AF80-3BD0B83FE873}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Linea de tiempo de muertes por COVID-19 por país.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (covidDeaths)' name='federated.0m3jvgj0am01wq1bmfbwh08ig90v' />
          </datasources>
          <datasource-dependencies datasource='federated.0m3jvgj0am01wq1bmfbwh08ig90v'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[total_deaths]' derivation='Max' name='[max:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Total Deaths' datatype='integer' datatype-customized='true' name='[total_deaths]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Quarter-Trunc' name='[tqr:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[max:total_deaths:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:location:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:location:nk]</column>
            <column>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[max:total_deaths:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[max:total_deaths:qk]' scope='rows' value='Muertes por COVID-19' />
            <format attr='title' class='0' field='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[tqr:date:qk]' scope='cols' value='Trimestres años' />
            <format attr='width' field='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[max:total_deaths:qk]' value='64' />
            <format attr='height' field='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[tqr:date:qk]' value='48' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:location:nk]' />
              <text column='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[max:total_deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[max:total_deaths:qk]</rows>
        <cols>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[tqr:date:qk]</cols>
      </table>
      <simple-id uuid='{A9911342-753F-4434-8A40-1E5AFC06109E}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Linea de tiempo de contagios de COVID-19 por país.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (covidDeaths)' name='federated.0m3jvgj0am01wq1bmfbwh08ig90v' />
          </datasources>
          <datasource-dependencies datasource='federated.0m3jvgj0am01wq1bmfbwh08ig90v'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Total Cases' datatype='integer' datatype-customized='true' name='[total_cases]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Quarter-Trunc' name='[tqr:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:location:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[tqr:date:qk]' scope='cols' value='Trimestres años' />
            <format attr='title' class='0' field='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[max:total_cases:qk]' scope='rows' value='Casos de COVID-19' />
            <format attr='width' field='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[max:total_cases:qk]' value='56' />
            <format attr='height' field='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[tqr:date:qk]' value='44' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:location:nk]' />
              <text column='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[max:total_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='auto' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-line-first' value='false' />
                <format attr='mark-labels-range-scope' value='table' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[max:total_cases:qk]</rows>
        <cols>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[tqr:date:qk]</cols>
      </table>
      <simple-id uuid='{ED492368-F0A6-4765-8B0C-D631B6E591B8}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>Porcentaje de la población vacunada contra el COVID-19.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (covidDeaths)' name='federated.0m3jvgj0am01wq1bmfbwh08ig90v' />
          </datasources>
          <datasource-dependencies datasource='federated.0m3jvgj0am01wq1bmfbwh08ig90v'>
            <column-instance column='[final_vaccinated]' derivation='Attribute' name='[attr:final_vaccinated:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Attribute' name='[attr:population:qk]' pivot='key' type='quantitative' />
            <column caption='Final Vaccinated' datatype='integer' datatype-customized='true' name='[final_vaccinated]' role='measure' type='quantitative' />
            <column caption='Final Vaccinated Percentage' datatype='real' datatype-customized='true' default-format='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' name='[final_vaccinated_percentage]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[final_vaccinated_percentage]' derivation='None' name='[none:final_vaccinated_percentage:ok]' pivot='key' type='ordinal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:location:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[attr:final_vaccinated:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[attr:final_vaccinated:qk]' scope='rows' value='false' />
            <format attr='width' field='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[attr:population:qk]' value='44' />
            <format attr='width' field='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[attr:final_vaccinated:qk]' value='44' />
            <format attr='height' field='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:location:nk]' value='55' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[:Measure Names]' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[attr:final_vaccinated:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[:Measure Names]' />
              <tooltip column='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[attr:final_vaccinated:qk]' />
              <text column='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:final_vaccinated_percentage:ok]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
                <format attr='wrap' value='auto' />
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#000000' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='9' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[attr:population:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[:Measure Names]' />
              <text column='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[attr:population:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='9' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0m3jvgj0am01wq1bmfbwh08ig90v].[attr:population:qk] + [federated.0m3jvgj0am01wq1bmfbwh08ig90v].[attr:final_vaccinated:qk])</rows>
        <cols>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{BAD51E7C-C167-4498-AD57-F3D67814E5DB}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Sheet1 (covidDeaths)' name='federated.0m3jvgj0am01wq1bmfbwh08ig90v' />
      </datasources>
      <datasource-dependencies datasource='federated.0m3jvgj0am01wq1bmfbwh08ig90v'>
        <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
        <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98130' id='12' param='horz' type-v2='layout-flow' w='99064' x='468' y='935'>
            <zone h='98130' id='7' param='horz' type-v2='layout-flow' w='99064' x='468' y='935'>
              <zone h='98130' id='5' type-v2='layout-basic' w='99064' x='468' y='935'>
                <zone h='50934' id='3' name='Sheet 1' w='21475' x='468' y='935'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='50934' id='9' name='Sheet 2' w='49503' x='50029' y='935'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='47196' id='10' name='Sheet 3' w='47513' x='7548' y='51869'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='47196' id='15' name='Sheet 4' w='44471' x='55061' y='51869'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='50934' id='17' name='Sheet 5' w='28086' x='21943' y='935'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='25467' id='16' name='Sheet 4' param='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:location:nk]' type-v2='filter' w='7080' x='468' y='73598'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='21729' id='14' name='Sheet 3' pane-specification-id='0' param='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:location:nk]' type-v2='color' w='7080' x='468' y='51869'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='6776' id='19' name='Sheet 5' pane-specification-id='2' param='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[:Measure Names]' type-v2='color' w='7256' x='42774' y='4790' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1650' minheight='1650' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='21' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98130' id='20' param='vert' type-v2='layout-flow' w='99064' x='468' y='935'>
                <zone fixed-size='280' h='50934' id='3' is-fixed='true' name='Sheet 1' w='21475' x='468' y='935'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50934' id='17' is-fixed='true' name='Sheet 5' w='28086' x='21943' y='935'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6776' id='19' name='Sheet 5' pane-specification-id='2' param='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[:Measure Names]' type-v2='color' w='7256' x='42774' y='4790'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50934' id='9' is-fixed='true' name='Sheet 2' w='49503' x='50029' y='935'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47196' id='10' is-fixed='true' name='Sheet 3' w='47513' x='7548' y='51869'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='21729' id='14' name='Sheet 3' pane-specification-id='0' param='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:location:nk]' type-v2='color' w='7080' x='468' y='51869'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='25467' id='16' mode='checkdropdown' name='Sheet 4' param='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:location:nk]' type-v2='filter' w='7080' x='468' y='73598'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47196' id='15' is-fixed='true' name='Sheet 4' w='44471' x='55061' y='51869'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C0142A30-40F7-4A84-AEDA-B589876B2D86}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[attr:final_death_per_continent:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[attr:final_death_per_continent:qk]</field>
            <field>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{40A2A14E-BB32-40EA-9FD2-6584D855DFB3}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[max:total_deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[max:total_deaths:qk]</field>
            <field>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:location:nk]</field>
            <field>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:total_deaths:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{6CCF4C04-BCA1-4241-8F77-9B10D0D0DE95}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:location:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[max:total_deaths:nk]</field>
            <field>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:location:nk]</field>
            <field>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:total_deaths:nk]</field>
            <field>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:total_deaths:ok]</field>
            <field>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{91221B49-E639-4CBE-9379-5CC4413D9230}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:location:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:case_percentage:ok]</field>
            <field>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:location:nk]</field>
            <field>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:total_cases:ok]</field>
            <field>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{54789739-792E-4FE8-AB9A-B9F0562E70D2}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[:Measure Names]' type='color' />
            <card param='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:location:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[attr:final_vaccinated:ok]</field>
            <field>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[attr:population:ok]</field>
            <field>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[attr:population:qk]</field>
            <field>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[max:final_vaccinated:ok]</field>
            <field>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[max:final_vaccinated:qk]</field>
            <field>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[max:population:ok]</field>
            <field>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[max:population:qk]</field>
            <field>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:final_vaccinated:nk]</field>
            <field>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:final_vaccinated:ok]</field>
            <field>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:final_vaccinated_percentage:nk]</field>
            <field>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:final_vaccinated_percentage:ok]</field>
            <field>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[none:location:nk]</field>
            <field>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[sum:final_vaccinated:ok]</field>
            <field>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[sum:final_vaccinated:qk]</field>
            <field>[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[sum:population:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2C6D5F23-7ADE-404E-B3F8-BD157EA43985}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 5'>
          <zoom type='entire-view' />
          <highlight field='[federated.0m3jvgj0am01wq1bmfbwh08ig90v].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{C1010FFA-0F2E-4BA6-BFC1-2557F2CC3818}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
